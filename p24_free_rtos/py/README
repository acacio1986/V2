Gerenciador do modulo

----

Requesitos:
 - Python 2.6
 - pyserial: http://pyserial.sourceforge.net/

----

Utilizando:
 Execute o programa.
 Busque o modulo conectado a porta usb, digitando:
  - "busca"
 A pasta "ami" (padrao) tem os arquivos que devem ser enviados para o modulo.
 Exemplos: arquivos de configuracao "cg.ini" (padrao), programa em basic, 
 programa em lua e etc...
 Para atualizar o modulo, digite:
  - "atualiza"
 
 Mais comandos, digite:
  - "help"
  
Alguns comandos uteis:
 - "limpa" : limpa a memoria do modulo
 - "stack" : verifica o consumo de stack pelas tarefas do freertos
 - "lsp"   : lista os arquivos da memoria do modulo
 - "rmp"   : remove um arquivo especifico

----

Arquivo de configuracao (cg.ini) :
 O padrao e nao deve ser modificado é "cg.ini", caso seja modificado o p24
 nao sera capaz de carrega o arquivo de configuracao, logo vai utiliza as 
 definicoes padroes.

 O arquivo de configuracao informa ao modulo o seguinte:
  - identificacao do modulo: id, em sistema
  - senha para o acesso: senha, em sistema

  - memoria utilizada pela Usb: stack_usb, em sistema
  - prioridade da Usb: prio_usb, em sistema
  - memoria utilizada pelo Bash: stack_bash, em sistema
  - prioridade do Bash: prio_bash, em sistema

  - nome do programa em basic: nome, em basic
  - memoria utilizada pelo basic, stack_basic, em basic
  - prioridade do basic, prio_basic, em basic

  - nome do programa em lua: nome, em lua
  - memoria utilizada pelo lua, stack_lua, em lua
  - prioridade do lua, prio_lua, em lua

  Exemplos:
  	[sistema]
	id = "vicent1757";
	senha = "130590";

	stack_usb = 2;
	prio_usb = 0;

	stack_bash = 4;
	prio_bash = 0;

	[basic]
	nome = "pbasic.bas";
	stack_basic = 4;
	prio_basic = 0;

	[lua]
	nome = "plua.lua";
	stack_lua = 8;
	prio_lua = 0;
	